name: "Autobuild Docker Containers"

on:
  push:
    branches:
      - main
      - staging
      - dev
      - fix/auto-deploys

jobs:
#  publish_common_if_needed:
#    name: "Publish Common to npm"
#    steps:
#      - uses: actions/setup-node@v3
#        with:
#        node-version: '16.x'
#        registry-url: 'https://registry.npmjs.org'
#      - run: npm i && npm run build
#      - run: npm version patch
#      - run: npm publish
#    env:
#      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build_core_image:
    name: "Build base docker image"
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          image: ./dockerfiles/node.Dockerfile
          tags: sprocket-core:local
          outputs: type=docker,dest=/tmp/core.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: sprocket-core
          path: /tmp/core.tar

  build_microservices:
    name: "Build Node Services"
    runs-on: ubuntu-latest
    needs:
      - build_core_image
    strategy:
      matrix:
        directory:
          - [discord-bot, ./clients/discord-bot]
          - [web, ./clients/web]
          - [core, ./core]
          - [image-generation-service, ./microservices/image-generation-service]
          - [matchmaking-service, ./microservices/matchmaking-service]
          # - [replay-parse-service, ./microservices/replay-parse-service]
          - [server-analytics-service, ./microservices/server-analytics-service]

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Check if there are changes in this project
        uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          list-files: none
          filters: |
            change:
              ${{ matrix.directory[1] }}**
      
      - name: Build project
        uses: ./.github/reusable_workflows/build_container
        with:
          build_directory: ${{ matrix.directory[1] }}
          docker_image: ${{ matrix.directory[0] }}
          docker_tag: ${{steps.extract_branch.outputs.branch}}
          docker_username: ${{ secrets.docker_username }}
          docker_access_token: ${{ secrets.docker_access_token }}
