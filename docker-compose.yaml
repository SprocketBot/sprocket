version: "3.9"

services:
  traefik:
    container_name: sprocket-traefik
    image: traefik
    volumes:
      - ./config/traefik:/traefik
      - ${DOCKER_SOCKET_PATH:-/var/run/docker.sock}:/var/run/docker.sock:ro
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--providers.file.filename=/traefik/dyn.yaml"
    ports:
      - 8080:80
      # If using TLS, uncomment
      # - 443:443

  core:
    container_name: sprocket-core
    image: oven/bun:latest
    restart: unless-stopped
    depends_on:
      - postgres
      - lavinmq
      - redis
    volumes:
      - .:/app:rw
      - ./.env:/app/core/.env
      - ./config.yaml:/app/core/config.yaml
    command: bun --preload ../lib/src/tracing.ts --bun --watch src/main.ts
    ports:
      - 3000:3000
    working_dir: /app/core
    labels:
      traefik.enable: true
      traefik.http.routers.core.rule: Host(`${CORE_URL:-api.localhost}`)
      traefik.http.routers.core.entrypoints: web,websecure
      traefik.http.services.core.loadbalancer.server.port: 3000
    environment:
      SERVICE_NAME: "SprocketCore"

  matchmaking:
    container_name: sprocket-matchmaking
    image: oven/bun:1.0.30-alpine
    restart: unless-stopped
    command: bun --preload ../../lib/src/tracing.ts -b --watch src/main.ts
    depends_on:
      - lavinmq
      - redis
    volumes:
      - .:/app
      - ./.env:/app/services/matchmaking/.env
      - ./config.yaml:/app/services/matchmaking/config.yaml
    working_dir: /app/services/matchmaking
    environment:
      SERVICE_NAME: "SprocketMatchmaking"

  web:
    container_name: sprocket-web
    image: oven/bun:latest
    depends_on:
      - core
    volumes:
      - .:/app
      - ./.env:/app/clients/web/.env
      - ./config.yaml:/app/clients/web/config.yaml
    command: bun run -b dev --host
    ports:
      - 5173:5173
    working_dir: /app/clients/web
    environment:
      PUBLIC_API_URL: ${CORE_URL:-api.localhost}
      PUBLIC_API_SECURE: ${SSL:-false}
      PUBLIC_API_PORT: ${LISTEN_PORT}
      PRIVATE_API_URL: core
      PRIVATE_API_SECURE: false
      PRIVATE_API_PORT: 3000
    labels:
      traefik.enable: true
      traefik.http.routers.web.rule: Host(`${BASE_URL:-localhost}`)
      traefik.http.routers.web.entrypoints: web,websecure
      traefik.http.services.web.loadbalancer.server.port: 5173

  discord:
    container_name: sprocket-discord
    image: oven/bun:1.0.30-alpine
    depends_on:
      - lavinmq
      - redis
    volumes:
      - .:/app
      - ./.env:/app/clients/discord/.env
      - ./config.yaml:/app/clients/discord/config.yaml
    command: bun --preload ../../lib/src/tracing.ts -b --watch src/main.ts
    working_dir: /app/clients/discord
    environment:
      SERVICE_NAME: "SprocketDiscord"

  postgres:
    container_name: sprocket-postgres
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  lavinmq:
    container_name: sprocket-lavinmq
    image: cloudamqp/lavinmq
    labels:
      traefik.enable: true
      traefik.http.routers.lavinmq.rule: Host(`${LAVIN_URL:-lavin.localhost}`)
      traefik.http.routers.lavinmq.entrypoints: web,websecure
      traefik.http.services.lavinmq.loadbalancer.server.port: 15672

  # Recommend using https://redis.tinycraft.cc/ to debug
  redis:
    container_name: sprocket-redis
    image: redis/redis-stack:latest
    ports:
      - 6379:6379
    labels:
      traefik.enable: true
      traefik.http.routers.redis.rule: Host(`${REDIS_URL:-redis.localhost}`)
      traefik.http.routers.redis.entrypoints: web,websecure
      traefik.http.services.redis.loadbalancer.server.port: 8001

  ##########
  ##### Monitoring Services
  ##########

  grafana:
    image: grafana/grafana:latest
    profiles: [monitoring]
    volumes:
      - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/ds.yaml:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
    labels:
      traefik.enable: true
      traefik.http.routers.grafana.rule: Host(`${GRAFANA_URL:-grafana.localhost}`)
      traefik.http.routers.grafana.entrypoints: web,websecure
      traefik.http.services.grafana.loadbalancer.server.port: 3000

  tempo:
    image: grafana/tempo
    profiles: [monitoring]
    command: ["-config.file=/etc/tempo.yaml"]

    volumes:
      - ./config/tempo/tempo.yaml:/etc/tempo.yaml:ro

  loki:
    image: grafana/loki:2.9.4
    profiles: [monitoring]

  vector:
    profiles: [monitoring]
    image: timberio/vector:0.36.X-alpine
    volumes:
      - ./config/vector/vector.yaml:/etc/vector/vector.yaml:ro
      - ${DOCKER_SOCKET_PATH:-/var/run/docker.sock}:/var/run/docker.sock:ro

networks:
  default:
    name: "sprocket-net"
    attachable: true
