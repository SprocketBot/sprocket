# Needed secrets for this workflow:
# DOCKER_USERNAME
# DOCKER_PASSWORD
# DISCORD_WEBHOOK -> Discord webhook to send status updates to 
# MAIN_WEBHOOK -> Webhook to trigger main deployment to re-pull the image and deploy
# STAGING_WEBHOOK -> Webhook to trigger staging deployment to re-pull the image and deploy
# DEV_WEBHOOK -> Webhook to trigger dev deployment to re-pull the image and deploy
# MAIN_BASIC_CREDS -> username:password for HTTP Basic Auth
# STAGING_BASIC_CREDS -> username:password for HTTP Basic Auth
# DEV_BASIC_CREDS -> username:password for HTTP Basic Auth
name: build-and-push-images
on:
  push:
    branches:
      - main
      - staging
      - dev
jobs:
  build_and_push:
    name: Build Docker images and push to Docker Hub
    runs-on: ubuntu-latest
    steps:

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Check out the repo
        uses: actions/checkout@v2

        ## Used for Multi-Arch Builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build And Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          target: app_image
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/${{ github.event.repository.name }}:${{ steps.extract_branch.outputs.branch }}
          platforms: linux/amd64,linux/arm64
      
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

      # - name: "Main Deployment"
      #   run: |
      #     curl -u ${{ secrets.MAIN_BASIC_CREDS }} -XPOST ${{ secrets.MAIN_WEBHOOK }}
      #   if: ${{ steps.extract_branch.outputs.branch == 'main' && success() }}

      # - name: "Staging Deployment"
      #   run: |
      #     curl -u ${{ secrets.STAGING_BASIC_CREDS }} -XPOST ${{ secrets.STAGING_WEBHOOK }}
      #   if: ${{ steps.extract_branch.outputs.branch == 'staging' && success() }}

      - name: "Dev Deployment"
        run: |
          curl -u ${{ secrets.DEV_BASIC_CREDS }} -XPOST ${{ secrets.DEV_WEBHOOK }}
        # TODO: Change branch name to `dev` when rolling out staging and production environments
        if: ${{ steps.extract_branch.outputs.branch == 'main' && success() }}
        